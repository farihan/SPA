@model Hans.SinglePageApp.Web.Models.ProductModel

@{
    ViewBag.Title = "Product(s)";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@*<div class="btn-toolbar" data-bind="visible: viewModel.timesheetsSelected() > 0">
    <div class="btn-group">
        <span class="btn btn-primary">Actions</span>
        <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="">
            <span class="caret"></span>
        </a>
        <ul class="dropdown-menu">
            <li><a id="new-timesheet"
                   data-toggle="modal" 
                   href="#product-delete">Delete</a></li>
        </ul>
    </div>
</div>*@

<div class="pull-right">
    <a id="create-product" class="btn btn-primary" data-toggle="modal" href="#product-modal">Create Product</a>
</div>

<div class="modal hide fade" id="product-modal">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">×</button>
        <h3>Product</h3>
    </div>

    <form id="Product" data-bind="submit: function(form) { postProduct(form, 'product-modal') }">
        <div class="modal-body">
            @{ Html.RenderPartial("_Editor", Model); }
        </div>

        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Cancel</a>
            <input type="submit" class="btn btn-primary" value="Save" />
        </div>
    </form>
</div>

<div id="basic-grid">
    @Html.Partial("_BasicGrid")
</div>


<script type="text/javascript" src="@Url.Content("~/Scripts/knockout-2.1.0.js")"></script>
<script type="text/javascript">
    $(function () {
        ko.applyBindings(productViewModel);
        productViewModel.loadProducts();
    });

    function product(product) {
        this.productID = ko.observable(product.ProductID);
        this.productName = ko.observable(product.ProductName);
        this.quantityPerUnit = ko.observable(product.QuantityPerUnit);
        this.unitPrice = ko.observable(product.UnitPrice);
        this.unitsInStock = ko.observable(product.UnitsInStock);
        this.unitsOnOrder = ko.observable(product.UnitsOnOrder);
        this.reorderLevel = ko.observable(product.ReorderLevel);
        this.discontinued = ko.observable(product.Discontinued);
    }

    var productViewModel = {
        products: ko.observableArray([]),
        itemNumber: function (index) {
            return index + 1;
        },
        loadProducts: function () {
            var self = this;

            $.getJSON('@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "ProductService" })',
                    function (products) {
                        self.products.removeAll();

                        $.each(products, function (index, item) {
                            self.products.push(new product(item));
                        });
                    });
            },

            resetForm: function (formId) {
                var form = $('#' + formId);
                form.validate().resetForm();
                form.get(0).reset();
            },

            postProduct: function (form, modalId) {
                form = $(form);

                if (!form.valid())
                    return;

                var json = JSON.stringify(this._getProductFrom(form));

                var self = this;
                $.ajax({
                    url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "ProductService" })',
                    type: 'POST',
                    data: json,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (jsonObject) {
                        self.products.push(new product(jsonObject));
                        $('#' + modalId).modal('hide');
                    }
                });
            },

            _getProductFrom: function (form) {
                form = $(form);
                var timesheet = {};
                form.find('input[type!=submit],select').each(function () {
                    product[this.name] = $(this).val();
                });

                return product;
            }

    };

    $('#product-modal').on('hide', function () {
        var form = $('#Product');
        form.validate().resetForm();
        form.get(0).reset();
        form.removeData('product');
        form.find("input[type='hidden'][id='id']").remove();
        form.find("span").empty();
    });
</script>
